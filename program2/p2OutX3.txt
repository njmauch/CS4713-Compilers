primClassif subClassif   tokenStr
   1 Int i;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   i
   2 Float pi314;
SEPARATOR   -            ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   pi314
   3 String day;
SEPARATOR   -            ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   day
   4    day
SEPARATOR   -            ;
   5    =
OPERAND     IDENTIFIER   day
   7 String name;
OPERAND     STRING       Sunday

CONTROL     DECLARE      String
OPERAND     IDENTIFIER   name
   8 name = "Anita Goodgrade";
SEPARATOR   -            ;
OPERAND     IDENTIFIER   name
OPERATOR    -            =
   9 String weird;
OPERAND     STRING       Anita Goodgrade

CONTROL     DECLARE      String
OPERAND     IDENTIFIER   weird
   10 weird = "\tTX\tTexas\n";
SEPARATOR   -            ;
OPERAND     IDENTIFIER   weird
OPERATOR    -            =
   11 String loc;
OPERAND     STRING       . TX. Texas.
                         09  09     0A
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   loc
   12 loc = "TX";
SEPARATOR   -            ;
OPERAND     IDENTIFIER   loc
OPERATOR    -            =
   13
   14 // numeric stuff
   15 print(">>> Checking datatype results based on left operand");
OPERAND     STRING       TX

SEPARATOR   -            (
   16 pi314 = 3.14;
OPERAND     STRING       >>> Checking datatype results based on left operand

OPERAND     IDENTIFIER   pi314
OPERATOR    -            =
OPERAND     FLOAT        3.14
   17 Float area;
SEPARATOR   -            ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   area
   18 Float radius2;
SEPARATOR   -            ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   radius2
   19 Int radius;
SEPARATOR   -            ;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   radius
   20 radius = 8;
SEPARATOR   -            ;
OPERAND     IDENTIFIER   radius
OPERATOR    -            =
OPERAND     INTEGER      8
   21 radius2 = radius ^ 2;  // square the radius
SEPARATOR   -            ;
OPERAND     IDENTIFIER   radius2
OPERATOR    -            =
OPERAND     IDENTIFIER   radius
OPERATOR    -            ^
OPERAND     INTEGER      2
   22 print("\t1. area all float");
SEPARATOR   -            ;
SEPARATOR   -            (
   23 area = pi * radius2;
OPERAND     STRING       . 1. area all float
                         09
OPERAND     IDENTIFIER   area
OPERATOR    -            =
OPERAND     IDENTIFIER   pi
OPERATOR    -            *
OPERAND     IDENTIFIER   radius2
   24 print("\tradius="
SEPARATOR   -            ;
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   25       ,  radius
OPERAND     STRING       . radius=
                         09
SEPARATOR   -            ,
   26       ,  "radius2="
OPERAND     IDENTIFIER   radius
   27       ,  radius2
OPERAND     STRING       radius2=

SEPARATOR   -            ,
   28       ,  "area="
OPERAND     IDENTIFIER   radius2
   29       ,  area);
OPERAND     STRING       area=

SEPARATOR   -            ,
OPERAND     IDENTIFIER   area
SEPARATOR   -            )
   30 Int irad2;
SEPARATOR   -            ;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   irad2
   31 irad2 = radius ^ 2;
SEPARATOR   -            ;
OPERAND     IDENTIFIER   irad2
OPERATOR    -            =
OPERAND     IDENTIFIER   radius
OPERATOR    -            ^
OPERAND     INTEGER      2
   32 print("\t2. area using int radius as left operand");
SEPARATOR   -            ;
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   33 area = irad2 * pi;
OPERAND     STRING       . 2. area using int radius as left operand
                         09
OPERAND     IDENTIFIER   area
OPERATOR    -            =
OPERAND     IDENTIFIER   irad2
OPERATOR    -            *
OPERAND     IDENTIFIER   pi
   34 print("\tradius=", radius, "irad2=", irad2, "area=", area);
SEPARATOR   -            ;
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   35 Float circum;
OPERAND     STRING       . radius=
                         09
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   circum
   36 Float twoPi;
SEPARATOR   -            ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   twoPi
   37 print("\t3. circumference using twoPi as float * int");
SEPARATOR   -            ;
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   38 twoPi = pi314 * 2;
OPERAND     STRING       . 3. circumference using twoPi as float * int
                         09
OPERAND     IDENTIFIER   twoPi
OPERATOR    -            =
OPERAND     IDENTIFIER   pi314
OPERATOR    -            *
OPERAND     INTEGER      2
   39 circum = twoPi * radius;
SEPARATOR   -            ;
OPERAND     IDENTIFIER   circum
OPERATOR    -            =
OPERAND     IDENTIFIER   twoPi
OPERATOR    -            *
OPERAND     IDENTIFIER   radius
   40 print("\tradius=", radius, "twoPi=", twoPi, "circum=", circum);
SEPARATOR   -            ;
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   41 print("\t4. circumference using twoPi as int * float");
OPERAND     STRING       . radius=
                         09
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   42 twoPi = 2 * pi314;
OPERAND     STRING       . 4. circumference using twoPi as int * float
                         09
OPERAND     IDENTIFIER   twoPi
OPERATOR    -            =
OPERAND     INTEGER      2
OPERATOR    -            *
OPERAND     IDENTIFIER   pi314
   43 circum = twoPi * radius;
SEPARATOR   -            ;
OPERAND     IDENTIFIER   circum
OPERATOR    -            =
OPERAND     IDENTIFIER   twoPi
OPERATOR    -            *
OPERAND     IDENTIFIER   radius
   44 print("\tradius=", radius, "twoPi=", twoPi, "circum=", circum);
SEPARATOR   -            ;
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   45
   46 // Simple if
   47 i = 0;
OPERAND     STRING       . radius=
                         09
OPERATOR    -            =
OPERAND     INTEGER      0
   48 print(">>> First If");
SEPARATOR   -            ;
FUNCTION    BUILTIN      print
SEPARATOR   -            (
   49 if loc == "TX":
OPERAND     STRING       >>> First If

CONTROL     FLOW         if
OPERAND     IDENTIFIER   loc
OPERATOR    -            ==
   50     // It is TX
   51     print("\tloc is", loc);
OPERAND     STRING       TX

SEPARATOR   -            (
   52     // it is ok to have this statement on multiple lines.
   53     // That is why we have a semicolon
   54     i
   55        =
   57           + 1;
OPERAND     STRING       . loc is
                         09
OPERAND     IDENTIFIER   pi314
Line: 58 Invalid number format: '314Z', File: p2InputX3.txt
java.lang.Exception
	at pickle.Scanner.createOperandToken(Scanner.java:275)
	at pickle.Scanner.getNextToken(Scanner.java:194)
	at pickle.Scanner.getNext(Scanner.java:53)
	at pickle.Pickle.main(Pickle.java:36)